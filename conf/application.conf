
play.http.secret.key = "h1bGV6EHytlQ]pP9:3UgDDBfqjSl9Zo53@i8<QzDO6E^of51Hz=4XRT8pNhqsfF["

play.i18n.langs = ["en"]

play.filters.hosts.allowed = ["."]

play.http.filters = "utils.Filters"

play.filters.disabled += "play.filters.csrf.CSRFFilter"
play.modules.disabled += "play.filters.csrf.CSRFModule"
play.filters.enabled += "play.filters.cors.CORSFilter"
play.filters.cors {
  pathPrefixes = ["/"]
  allowedOrigins = null
  allowedHttpMethods = ["GET", "POST", "OPTIONS"]
  allowedHttpHeaders = ["Accept", "Content-Type", "Origin", "X-Json", "X-Prototype-Version", "X-Requested-With"]
  preflightMaxAge = 3 days
}

play.filters.headers {
  contentSecurityPolicy = "default-src 'self';"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" img-src 'self' data:;"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" style-src 'self' 'unsafe-inline';"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" font-src 'self' fonts.gstatic.com data:;"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" script-src 'self' 'unsafe-eval' 'unsafe-inline';"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" connect-src 'self' http://localhost:*;"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" frame-src;"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" frame-ancestors;"
}

play.http.requestHandler = "play.api.http.DefaultHttpRequestHandler"

// enable ton client module
play.modules.enabled += "modules.io.broxus.ton.TonClientGlobalModule"

include "ton.conf"